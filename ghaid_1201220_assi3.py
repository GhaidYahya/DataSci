# -*- coding: utf-8 -*-
"""Ghaid_1201220_Assi3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HuPnwMEFXG1EJEgDsvfdacvMsO7t7Qov

# ü§ç **Ghaid Yahya - 1201220** *Assignment No.3* ü§ç
"""

import numpy as np
import matplotlib.pyplot as plt #for the histogram


np.random.seed(1201220)
# the population as requested mean=1500, st.d= 700 , and the size =10000000
population = np.random.normal(loc=1500, scale=700, size=10000000)

# a random seed with my ID, so that it generates the same sequence of random numbers everytime the code runs


#the 10,100,1000,10000 random samples form the population
S10 = np.random.choice(population, size=10, replace=False) #sample size 10
S100 = np.random.choice(population, size=100, replace=False) #sample size 100
S1000 = np.random.choice(population, size=1000, replace=False) #sample size 1000
S10000 = np.random.choice(population, size=10000, replace=False)#sample size 10000


# question b) What is the value that 50% of the data below it?
Q2 = np.median(S10000) # median(q2)
print("Q2:", Q2)

#question c) What is the value that 75% of the data below it?
Q3 = np.percentile(S10000, 75) # third quartile(q3)
print("Q3:", Q3)

#question d) What is the value that 25% of the data below it?
Q1 = np.percentile(S10000, 25) # first quartile(q1)
print("Q1:", Q1)

#to generate the histogram for part a in the questions(a histogram is needed to see the distributon)
plt.hist(S10000, bins=30, density=True)
plt.title('Histogram Of The 10000 Sample Size')
plt.xlabel('Value')
plt.ylabel('Freq')
plt.show()

population_mean = np.mean(population)

sampling_error_S10 = population_mean - np.mean(S10)
sampling_error_S100 = population_mean - np.mean(S100)
sampling_error_S1000 = population_mean - np.mean(S1000)
sampling_error_S10000 = population_mean - np.mean(S10000)

print("Sampling error for sample size 10:", sampling_error_S10)
print("Sampling error for sample size 100:", sampling_error_S100)
print("Sampling error for sample size 1000:", sampling_error_S1000)
print("Sampling error for sample size 10000:", sampling_error_S10000)

"""# ‚û°**What is the relation between the sample size and the sampling error?**
 *The relation is **inverse**, because as the sample size grows the sample statistic becomes more representative of the population, which leads to reducing the sampling error. also, larger sample sizes give more reliable estimates of the population parameters, enhancing the accuracy of the analyses and the conclusions. in conclusion **increasing the sample size leads to a reduction in the sampling error which increases the precision of the estimates**.*

# ‚û°**Which sample is more representative of the population? justify your answer**
*The sample size of **10,000 is more representative** of the population because it captures the largest portion of our population variability and its less likely to be effected by outliers compared to the other smaller sample sizes.*

# üå∏**a. Is the sample randomly distributed ? Justify your answer**
*as evidenced by the histogram above it apperes to be in a bell-shaped curve and its symmetric around the mean this means that the data near the mean are more frequent in occurrence than data far from the mean. If the data were randomly distributed, we would expect to see a more uniform distribution across the range of the data. So, in this case, **the sample is NOT randomly distributed but in fact normally distributed**.*

# üå∏**e.What are the values calculated in b, c, and d are statistically called ?**
*I mentioned the answers as comments in the code above but to be clear..*


*  The value in **b is the median**
*  The value in **c is the third quartile**
*  The value in **d is the first quartile**
"""